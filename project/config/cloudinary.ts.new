const cloudinaryConfig = {
  cloudName: process.env.EXPO_PUBLIC_CLOUDINARY_CLOUD_NAME || '',
  uploadPreset: process.env.EXPO_PUBLIC_CLOUDINARY_UPLOAD_PRESET || '',
};

// Helper function to construct Cloudinary URL
export const getAssetUrl = (publicId: string, options: {
  resourceType?: 'image' | 'video';
  width?: number;
  height?: number;
  crop?: 'fill' | 'thumb' | 'scale';
  quality?: 'auto' | number;
  format?: 'auto' | 'webp' | 'jpg' | 'png' | 'mp4' | 'webm';
} = {}) => {
  const { cloudName } = cloudinaryConfig;
  if (!cloudName) return '';

  const transformations = [];
  
  if (options.width || options.height) {
    transformations.push(`c_${options.crop || 'fill'}`);
    if (options.width) transformations.push(`w_${options.width}`);
    if (options.height) transformations.push(`h_${options.height}`);
  }
  
  if (options.quality) {
    transformations.push(`q_${options.quality}`);
  }
  
  if (options.format && options.format !== 'auto') {
    transformations.push(`f_${options.format}`);
  }
  
  const transformationString = transformations.length > 0 ? transformations.join(',') + '/' : '';
  const resourceType = options.resourceType || 'image';
  
  return `https://res.cloudinary.com/${cloudName}/${resourceType}/upload/${transformationString}${publicId}`;
};

// Helper function to upload media to Cloudinary
export const uploadToCloudinary = async (file: File | Blob, options: {
  resourceType?: 'image' | 'video' | 'raw';
  folder?: string;
  tags?: string[];
} = {}) => {
  // Validate required configuration
  const { cloudName, uploadPreset } = cloudinaryConfig;
  if (!cloudName || !uploadPreset) {
    throw new Error('Cloudinary configuration is missing. Please check your environment variables.');
  }

  const formData = new FormData();
  formData.append('file', file);
  formData.append('upload_preset', uploadPreset);
  
  if (options.folder) {
    formData.append('folder', options.folder);
  }
  
  if (options.tags) {
    formData.append('tags', options.tags.join(','));
  }

  try {
    const response = await fetch(
      `https://api.cloudinary.com/v1_1/${cloudName}/${options.resourceType || 'image'}/upload`,
      {
        method: 'POST',
        body: formData,
        headers: {
          'Accept': 'application/json',
        },
      }
    );
    
    if (!response.ok) {
      const errorText = await response.text();
      console.error('Cloudinary error response:', errorText);
      throw new Error(`Cloudinary upload failed: ${response.status} ${response.statusText}`);
    }
    
    let data;
    try {
      data = await response.json();
    } catch (e) {
      console.error('Failed to parse Cloudinary response:', e);
      throw new Error('Invalid response from Cloudinary');
    }
    
    if (data.error) {
      throw new Error(data.error.message);
    }
    
    return {
      publicId: data.public_id,
      url: data.secure_url,
      width: data.width,
      height: data.height,
      format: data.format,
    };
  } catch (error) {
    console.error('Error uploading to Cloudinary:', error);
    throw error;
  }
};
