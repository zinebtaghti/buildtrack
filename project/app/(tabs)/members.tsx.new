import { useState } from 'react';
import { View, Text, StyleSheet, FlatList, TextInput, TouchableOpacity, Image } from 'react-native';
import { Search, FilterX, Plus, UserPlus, Phone, Mail } from 'lucide-react-native';
import { Header } from '@/components/ui/Header';
import { useRouter } from 'expo-router';
import { useMembers } from '@/hooks/useMembers';

export default function MembersScreen() {
  const { members, loading, error } = useMembers();
  const [search, setSearch] = useState('');
  const router = useRouter();
  
  const filteredMembers = members?.filter(member => 
    member.name?.toLowerCase().includes(search.toLowerCase()) ||
    member.role?.toLowerCase().includes(search.toLowerCase())
  ) || [];
  
  const handleAddMember = () => {
    router.push('/team/create');
  };
  
  if (loading) {
    return (
      <View style={styles.container}>
        <Header title="Members" />
        <View style={styles.emptyContainer}>
          <Text style={styles.emptyText}>Loading members...</Text>
        </View>
      </View>
    );
  }

  if (error) {
    return (
      <View style={styles.container}>
        <Header title="Members" />
        <View style={styles.emptyContainer}>
          <Text style={styles.emptyText}>Error loading members: {error}</Text>
        </View>
      </View>
    );
  }
  
  return (
    <View style={styles.container}>
      <Header title="Members" />
      
      <View style={styles.searchContainer}>
        <View style={styles.searchInputContainer}>
          <Search size={20} color="#90A4AE" style={styles.searchIcon} />
          <TextInput
            style={styles.searchInput}
            placeholder="Search members"
            value={search}
            onChangeText={setSearch}
          />
          {search ? (
            <TouchableOpacity onPress={() => setSearch('')}>
              <FilterX size={20} color="#90A4AE" />
            </TouchableOpacity>
          ) : null}
        </View>
      </View>
      
      <FlatList
        data={filteredMembers}
        keyExtractor={item => item.id}
        contentContainerStyle={styles.listContent}
        renderItem={({ item }) => (
          <TouchableOpacity 
            style={styles.memberCard}
            onPress={() => router.push(`/member/${item.id}`)}
          >
            <View style={styles.memberHeader}>
              <Image 
                source={{ uri: item.avatar || 'https://images.pexels.com/photos/2379004/pexels-photo-2379004.jpeg' }} 
                style={styles.avatar}
              />
              <View style={styles.memberInfo}>
                <Text style={styles.memberName}>{item.name || 'Unknown User'}</Text>
                <Text style={styles.memberRole}>{item.role}</Text>
                {item.projects && item.projects.length > 0 && (
                  <Text style={styles.projectCount}>{item.projects.length} Projects</Text>
                )}
              </View>
            </View>
            
            <View style={styles.contactContainer}>
              {item.email && (
                <View style={styles.contactInfo}>
                  <Mail size={16} color="#607D8B" />
                  <Text style={styles.contactText}>{item.email}</Text>
                </View>
              )}
              {item.phone && (
                <View style={styles.contactInfo}>
                  <Phone size={16} color="#607D8B" />
                  <Text style={styles.contactText}>{item.phone}</Text>
                </View>
              )}
            </View>
          </TouchableOpacity>
        )}
        ListEmptyComponent={
          <View style={styles.emptyContainer}>
            <Text style={styles.emptyText}>
              {search ? 'No members found' : 'No members added yet'}
            </Text>
            <TouchableOpacity
              style={styles.addButton}
              onPress={handleAddMember}
            >
              <UserPlus size={16} color="#fff" />
              <Text style={styles.addButtonText}>Add Member</Text>
            </TouchableOpacity>
          </View>
        }
      />
      
      <TouchableOpacity
        style={styles.fabButton}
        onPress={handleAddMember}
      >
        <Plus size={24} color="#fff" />
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
  },
  searchContainer: {
    paddingHorizontal: 16,
    paddingVertical: 12,
  },
  searchInputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#fff',
    borderRadius: 8,
    paddingHorizontal: 12,
    height: 48,
    borderWidth: 1,
    borderColor: '#E0E0E0',
  },
  searchIcon: {
    marginRight: 8,
  },
  searchInput: {
    flex: 1,
    fontFamily: 'Inter-Regular',
    fontSize: 16,
    color: '#263238',
  },
  listContent: {
    paddingHorizontal: 16,
    paddingBottom: 80,
  },
  memberCard: {
    backgroundColor: '#fff',
    borderRadius: 12,
    padding: 16,
    marginBottom: 16,
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
  },
  memberHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 16,
  },
  avatar: {
    width: 60,
    height: 60,
    borderRadius: 30,
    marginRight: 16,
  },
  memberInfo: {
    flex: 1,
  },
  memberName: {
    fontFamily: 'Inter-SemiBold',
    fontSize: 18,
    color: '#263238',
    marginBottom: 4,
  },
  memberRole: {
    fontFamily: 'Inter-Medium',
    fontSize: 14,
    color: '#607D8B',
  },
  projectCount: {
    fontFamily: 'Inter-Regular',
    fontSize: 14,
    color: '#90A4AE',
    marginTop: 4,
  },
  contactContainer: {
    marginTop: 8,
  },
  contactInfo: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 8,
  },
  contactText: {
    fontFamily: 'Inter-Regular',
    fontSize: 14,
    color: '#607D8B',
    marginLeft: 8,
  },
  emptyContainer: {
    alignItems: 'center',
    justifyContent: 'center',
    padding: 24,
  },
  emptyText: {
    fontFamily: 'Inter-Regular',
    fontSize: 16,
    color: '#607D8B',
    marginBottom: 16,
  },
  addButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#0B5394',
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderRadius: 8,
  },
  addButtonText: {
    fontFamily: 'Inter-SemiBold',
    fontSize: 14,
    color: '#fff',
    marginLeft: 8,
  },
  fabButton: {
    position: 'absolute',
    bottom: 24,
    right: 24,
    width: 56,
    height: 56,
    borderRadius: 28,
    backgroundColor: '#0B5394',
    justifyContent: 'center',
    alignItems: 'center',
    elevation: 4,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 4,
  },
});
